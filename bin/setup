#!/bin/bash
# vi: set sw=4 ts=4 ai:

# Determine the program name and the 'running directory'
IAM="${0##*/}"
CRD="$( [[ "${0:0:2}" = "./" ]] &&
	{	printf "${PWD}/${0#./}"
	} || {
		printf "${0}"
	})"
CRD="${CRD%/*}"
CUR="${PWD}"

# Make sure all language settings are correct
export LANG=C

# Save the shell settings
SETA=0; [[ ${-} = *a* ]] && SETA=1
SETE=0; [[ ${-} = *e* ]] && SETE=1
SETU=0; [[ ${-} = *u* ]] && SETU=1
SETX=0; [[ ${-} = *x* ]] && SETX=1

# Set and unset the needed shell settings
set +o noclobber		# Overwrite existing files, if needed
set -o nounset			# Don't allow uninitialized variables
set +o errexit			# No returncode checking

# Set the PATH
PATH=/bin:/usr/bin:${PATH}

# Read the OpenShift functions
source ${OPENSHIFT_CARTRIDGE_SDK_BASH}

# Set constants and read constants
LIBDIR="${CRD}/../lib"
LIBRARY="${LIBDIR}/library"
[[ ! -r ${LIBRARY} ]] && { echo "${LIBRARY} not found"; exit 1; }
. ${LIBRARY} || { echo "Error reading ${LIBRARY}"; exit 1; }

# Create the some extra directories
# run -> the PID files
# lib -> the library files
[[ ! -d ${OPENSHIFT_PLN_DIR}/run ]] && mkdir -p ${OPENSHIFT_PLN_DIR}/run
[[ ! -d ${OPENSHIFT_PLN_DIR}/lib ]] && mkdir -p ${OPENSHIFT_PLN_DIR}/lib

#Get NYX Admin password and put it into a variable for erb processing.
getcockpit	${PLANON_COCKPIT_URL}NyxResource/${OPENSHIFT_APP_DNS}		\
	${OPENSHIFT_PLN_DIR}env/PLN_NYX_PASSWORD
	
#Get PMFS ID and put it into a variable for erb processing.
#getcockpit	${PLANON_COCKPIT_URL}PMFSID/${OPENSHIFT_APP_DNS}		\
#	${OPENSHIFT_PLN_DIR}env/PLN_PMFS_ID	
	
#Get PMFS PASSWORD and put it into a variable for erb processing.
#getcockpit	${PLANON_COCKPIT_URL}PMFSPASSWORD/${OPENSHIFT_APP_DNS}		\
#	${OPENSHIFT_PLN_DIR}env/PLN_PMFS_PASSWORD		


#get environement_type
case "${OPENSHIFT_NAMESPACE}" in
	testdev)
		export JBOSS_MODE=" -Dcom.planonsoftware.notproductionmode=true"
	devdev)
		Jexport JBOSS_MODE=" -Dcom.planonsoftware.notproductionmode=true"
	*)
		JAVA_OPTS="${JAVA_OPTS} -Dcom.planonsoftware.notproductionmode=false"
esac

#get environement_type
#if [[ ( x"${OPENSHIFT_NAMESPACE}" = x"prod" ) || ( x"${OPENSHIFT_NAMESPACE}" = x"proddev" ) ]]
#then
#	 export JBOSS_MODE="-Dcom.planonsoftware.notproductionmode=false"
#	 showstatus "0" "JBoss installed as Production mode"
#else
#	export JBOSS_MODE="-Dcom.planonsoftware.notproductionmode=true -Dcom.planonsoftware.notproductionmode.description=\"${OPENSHIFT_NAMESPACE} Environment\""
#	showstatus "0" "JBoss installed as Non-Production mode"
#fi

exit 0
