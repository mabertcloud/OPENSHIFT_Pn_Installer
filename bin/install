#!/bin/bash
# vi: set sw=4 ts=4 ai:

# Determine the program name and the 'running directory'
IAM="${0##*/}"
CRD="$( [[ "${0:0:2}" = "./" ]] &&
	{	printf "${PWD}/${0#./}"
	} || {
		printf "${0}"
	})"
CRD="${CRD%/*}"
CUR="${PWD}"

# Make sure all language settings are correct
export LANG=C

# Save the shell settings
SETA=0; [[ ${-} = *a* ]] && SETA=1
SETE=0; [[ ${-} = *e* ]] && SETE=1
SETU=0; [[ ${-} = *u* ]] && SETU=1
SETX=0; [[ ${-} = *x* ]] && SETX=1

# Set and unset the needed shell settings
set +o noclobber		# Overwrite existing files, if needed
set -o nounset			# Don't allow uninitialized variables
set +o errexit			# No returncode checking

# Read the OpenShift functions
source ${OPENSHIFT_CARTRIDGE_SDK_BASH}


# Get the commandline options
version=""
case "${1}" in
 	-v|--version)
 		version="${2}"
 		;;
esac


# Set constants and read constants
LIBDIR="${CRD}/../lib"
LIBRARY="${LIBDIR}/library"
[[ ! -r ${LIBRARY} ]] && { echo "${LIBRARY} not found"; exit 1; }
. ${LIBRARY} || { echo "Error reading ${LIBRARY}"; exit 1; }


if [[ x"${version}" == x"" ]]
then
	showstatus "0" "Install called without extra version info"
else
	showstatus "0" "Install called with version ${version}"
fi


# Program usage
usage()
{
	T="	"
	cat <<- @EOF
		Usage: ${IAM} [-v version|-h]

		${T}-h 	Shows this help
		${T}-v 	Gives the version number to install
	@EOF

	exit 1
}

# create directory's
mkdir -p ${OPENSHIFT_PLN_DIR}/{run,tmp,conf,logs,data}
# We assume this directory exists
cd ${OPENSHIFT_PLN_DIR}

# Get the right DB connections
showstatus "0" "Request database connect string"
get ${PLANON_COCKPIT_URL}/Database/${OPENSHIFT_APP_DNS}/${version}	\
	${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml
showstatus "${?}" "Request database executed name : ${OPENSHIFT_APP_DNS}"

showstatus "0" "Request webdav account"
get	${PLANON_COCKPIT_URL}/WebdavResource/${OPENSHIFT_APP_DNS}		\
	${OPENSHIFT_PLN_DIR}/conf/tomcat-users.xml
showstatus "${?}" "JBoss download started"

get ${DOWNLOAD_LOCATION}/${DOWNLOAD_FILE_JBOSS}						\
	${DOWNLOAD_FILE_JBOSS}
showstatus "${?}" "JBoss downloaded ended"

unzip -q $DOWNLOAD_FILE_JBOSS -d PlanonProCenter
showstatus "${?}" "JBoss unzipped"

rm ${DOWNLOAD_FILE_JBOSS}

chmod +x ${JBOSS}/bin/run.sh
chmod +x ${JBOSS}/bin/shutdown.sh

cp ${OPENSHIFT_PLN_DIR}/conf/jboss-service.xml	${JBOSS_DEF}/deploy/http-invoker.sar/META-INF/
cp ${OPENSHIFT_PLN_DIR}/conf/jndi.properties 	${JBOSS_DEF}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/hornetq-jms.xml 	${JBOSS_DEF}/deploy/hornetq/
#cp ${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml 	${JBOSS_DEF}/deploy

showstatus "0" "JBoss done!"

# TOMCAT
showstatus "0" "Tomcat download started"
get ${DOWNLOAD_LOCATION}/${DOWNLOAD_FILE_TOMCAT} 					\
	${DOWNLOAD_FILE_TOMCAT}
showstatus "${?}" "Tomcat downloaded ended"

unzip -q ${DOWNLOAD_FILE_TOMCAT} -d PlanonProCenter
showstatus "${?}" "Tomcat unzipped"

rm ${DOWNLOAD_FILE_TOMCAT}

cp ${OPENSHIFT_PLN_DIR}/conf/jndi.properties 			${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/mobile.properties 			${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/planon.properties 			${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/sdk.properties 			${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/logging.properties 		${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/mobile.logging.properties 	${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/planon.logging.properties 	${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/sdk.logging.properties 	${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/tomcat-users.xml 			${TOMCAT}/conf/
cp ${OPENSHIFT_PLN_DIR}/conf/server.xml		 			${TOMCAT}/conf/
cp -avr ${OPENSHIFT_PLN_DIR}conf/Catalina				${TOMCAT}/conf/

chmod +x ${TOMCAT}/bin/startup.sh
chmod +x ${TOMCAT}/bin/catalina.sh
chmod +x ${TOMCAT}/bin/shutdown.sh


#mkdir -p ${OPENSHIFT_PLN_DIR}/data/{webdav,secure,eetalk}

#webdav installation
#showstatus "0" "Accelerator data download started"
#get ${DOWNLOAD_LOCATION}/${DOWNLOAD_FILE_WEBDAV} 					\
#	${DOWNLOAD_FILE_WEBDAV}
#showstatus "${?}" "Webdav resource downloaded ended"

#unzip -q ${DOWNLOAD_FILE_WEBDAV} -d data
#showstatus "${?}" "Webdav resources unzipped"

#rm ${DOWNLOAD_FILE_WEBDAV}

#Create share for customer
if [[ ! -s "${OPENSHIFT_PLN_DIR}/conf/keys/share.priv" ]]
then
	get ${PLANON_COCKPIT_URL}/FileServerResource/usr/${OPENSHIFT_APP_DNS} 	\
		${OPENSHIFT_PLN_DIR}/conf/keys/share.mnt
	get ${PLANON_COCKPIT_URL}/FileServerResource/rsa/${OPENSHIFT_APP_DNS}	\
		${OPENSHIFT_PLN_DIR}/conf/keys/share.priv
	chmod 400 ${OPENSHIFT_PLN_DIR}/conf/keys/share.priv
fi

#
# Create data mount for customer
# Unmount with: fusermount -u ${OPENSHIFT_PLN_DIR}/data
#
CUSTSHARE=$(cat ${OPENSHIFT_PLN_DIR}/conf/keys/share.mnt)
mountpoint -q ${OPENSHIFT_PLN_DIR}/data ||								\
	sshfs																\
		-o IdentityFile=${OPENSHIFT_PLN_DIR}/conf/keys/share.priv		\
		-o StrictHostKeyChecking=no 									\
		-o UserKnownHostsFile=/dev/null 								\
		-o reconnect 													\
		${CUSTSHARE} 													\
		${OPENSHIFT_PLN_DIR}/data

# create symbolic link
ln -s ${OPENSHIFT_PLN_DIR}data/webdav/ ${TOMCAT}/webapps/


#webdav installation
showstatus "0" "Webstart download started"
get ${DOWNLOAD_LOCATION}/${DOWNLOAD_FILE_WEBSTART} 					\
	${DOWNLOAD_FILE_WEBSTART}
showstatus "${?}" "Webstart downloaded ended"

unzip -q ${DOWNLOAD_FILE_WEBSTART} -d ${TOMCAT}/webapps/ROOT/
showstatus "${?}" "Webstart resources unzipped"

rm ${DOWNLOAD_FILE_WEBSTART}

#webstart installation
mkdir -p ${TOMCAT}/webapps/ROOT/PlanonWebstart
cp ${OPENSHIFT_PLN_DIR}/conf/planon.jnlp	 			${TOMCAT}/webapps/ROOT/


showstatus "0" "Waiting for database to be ready."
# wait untill the database is ready stop after 60 seconds
typeset -i COUNTER=0
while [[ ! -s "${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml" ]]
do
	COUNTER=COUNTER+1
	sleep 5

	echo "  Check if database is ready.($COUNTER)"
	get ${PLANON_COCKPIT_URL}/Database/${OPENSHIFT_APP_DNS}			\
		${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml
	showstatus "${?}" "Waiting for database to be ready."

	if [[ ${COUNTER} -ge 4 ]]
	then
		break
	fi
done

if [[ ! -s "${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml" ]]
then
	showstatus "1" "    Database not ready, still taking a shot."
else
 	showstatus "0" "    Database is ready."
	cp ${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml ${JBOSS_DEF}/deploy
fi

touch ${TOMCAT}/webapps/webdav/${OPENSHIFT_APP_DNS}

exit 0
