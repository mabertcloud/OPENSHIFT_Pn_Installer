#!/bin/bash
# vi: set sw=4 ts=4 ai:

# Determine the program name and the 'running directory'
IAM="${0##*/}"
CRD="$( [[ "${0:0:2}" = "./" ]] &&
	{	printf "${PWD}/${0#./}"
	} || {
		printf "${0}"
	})"
CRD="${CRD%/*}"
CUR="${PWD}"

# Make sure all language settings are correct
export LANG=C

# Save the shell settings
SETA=0; [[ ${-} = *a* ]] && SETA=1
SETE=0; [[ ${-} = *e* ]] && SETE=1
SETU=0; [[ ${-} = *u* ]] && SETU=1
SETX=0; [[ ${-} = *x* ]] && SETX=1

# Set and unset the needed shell settings
set +o noclobber		# Overwrite existing files, if needed
set -o nounset			# Don't allow uninitialized variables
set +o errexit			# No returncode checking

# Read the OpenShift functions
source ${OPENSHIFT_CARTRIDGE_SDK_BASH}


# Get the commandline options
version=""
case "${1}" in
 	-v|--version)
 		version="${2}"
 		;;
esac


# Set constants and read constants
LIBDIR="${CRD}/../lib"
LIBRARY="${LIBDIR}/library"
[[ ! -r ${LIBRARY} ]] && { echo "${LIBRARY} not found"; exit 1; }
. ${LIBRARY} || { echo "Error reading ${LIBRARY}"; exit 1; }


if [[ x"${version}" == x"" ]]
then
	showstatus "0" "Install called without extra version info"
else
	showstatus "0" "Install called with version ${version}"
fi

# Program usage
usage()
{
	T="	"
	cat <<- @EOF
		Usage: ${IAM} [-v version|-h]

		${T}-h 	Shows this help
		${T}-v 	Gives the version number to install
	@EOF

	exit 1
}

# create directory's
mkdir -p ${OPENSHIFT_PLN_DIR}/{run,tmp,conf,logs,data,mount}
mkdir -p ${OPENSHIFT_PLN_DIR}/logs/boot
touch ${OPENSHIFT_PLN_DIR}/logs/sdk.log
touch ${OPENSHIFT_PLN_DIR}/logs/mobile.log

# We assume this directory exists
cd ${OPENSHIFT_PLN_DIR}

# Get the right DB connections
getcockpit ${PLANON_COCKPIT_URL}Database/${OPENSHIFT_APP_DNS}/${version}	\
	${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml
showstatus "${?}" "Request database executed name : ${OPENSHIFT_APP_DNS}"

#get Webdav credentials
getcockpit	${PLANON_COCKPIT_URL}WebdavResource/${OPENSHIFT_APP_DNS}		\
	${OPENSHIFT_PLN_DIR}/conf/tomcat-users.xml
showstatus "${?}" "Request webdav account executed name : ${OPENSHIFT_APP_DNS}"

#get PMFS cloud keys 
getcockpit	${PLANON_COCKPIT_URL}PmfsServerResource/${OPENSHIFT_APP_DNS}	\
	${OPENSHIFT_PLN_DIR}/conf/cloud.properties
showstatus "${?}" "Request pmfs cloud key executed name : ${OPENSHIFT_APP_DNS}"

# JBoss Installation
getartifact ${DOWNLOAD_FILE_JBOSS} ${DOWNLOAD_FILE_JBOSS}
showstatus "0" "JBoss download"
extract $DOWNLOAD_FILE_JBOSS PlanonProCenter
rm ${DOWNLOAD_FILE_JBOSS}
showstatus "0" "JBoss extracted"
chmod +x ${JBOSS}/bin/run.sh
chmod +x ${JBOSS}/bin/shutdown.sh

#remove of planon application files. These will be placed by the services cartridge
mkdir ${JBOSS}/initmode
mv ${JBOSS_DEPLOY}/planon-telesto.ear ${JBOSS}/initmode/
mv ${JBOSS_DEPLOY}/planonbackgroundactionjobs.ear ${JBOSS}/initmode/
mv ${JBOSS_DEPLOY}/planonexchangelink.ear ${JBOSS}/initmode/
mv ${JBOSS_DEPLOY}/planonschedulerengine.ear ${JBOSS}/initmode/
#delete unwanted files from installation
rm -rf ${JBOSS_DEPLOY}/planon-ds.xml
rm -rf ${JBOSS}/server/default/jndi.properties
rm -rf ${JBOSS}/tanuki

showstatus "0" "JBoss cleaned"
#add environment/pcc specific config files

cp ${OPENSHIFT_PLN_DIR}/conf/jboss-service.xml				${JBOSS_DEPLOY}/http-invoker.sar/META-INF/
cp ${OPENSHIFT_PLN_DIR}/conf/jndi.properties 				${JBOSS}/server/default/
cp ${OPENSHIFT_PLN_DIR}/conf/jndi.properties 				${JBOSS_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/planon-ds.xml 					${JBOSS_DEPLOY}/
cp ${OPENSHIFT_PLN_DIR}/conf/ApplicationMapping.properties 	${JBOSS_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/cloud.properties 				${JBOSS_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/login-config.xml 				${JBOSS_CONF}/

#no change in erb file cp ${OPENSHIFT_PLN_DIR}/conf/login-config.xml 				${JBOSS_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/jboss.logging.properties 		${JBOSS}/bin/logging.properties
# Update transaction-jboss-beans and put the following line at line 74 to avoid binding on localhost.
sed -i "74a <property name=\"processImplementation\">com.arjuna.ats.internal.arjuna.utils.ExecProcessId</property>" ${JBOSS_DEPLOY}/transaction-jboss-beans.xml
showstatus "0" "JBoss configured!"

# TOMCAT Installation
getartifact ${DOWNLOAD_FILE_TOMCAT} ${DOWNLOAD_FILE_TOMCAT}
showstatus "0" "Tomcat download"
extract ${DOWNLOAD_FILE_TOMCAT} PlanonProCenter
rm ${DOWNLOAD_FILE_TOMCAT}
showstatus "0" "Tomcat exctracted"
#cleanup unnecessary components for cloud from default installset
rm -rf ${TOMCAT}/tanuki 
rm -f ${TOMCAT_WEBAPPS}/nyx.war
rm -f ${TOMCAT_WEBAPPS}/pssmetadata.war
rm -f ${TOMCAT_WEBAPPS}/ResourcePlanner.war
rm -rf ${TOMCAT_WEBAPPS}/webdav
rm -rf ${TOMCAT_WEBAPPS}/PlanonWebstart/planon.jnlp

showstatus "0" "Tomcat cleaned"
#extract war files 
extract ${TOMCAT_WEBAPPS}/mobile.war ${TOMCAT_WEBAPPS}/mobile
extract ${TOMCAT_WEBAPPS}/pesc.war ${TOMCAT_WEBAPPS}/pesc
extract ${TOMCAT_WEBAPPS}/ROOT.war ${TOMCAT_WEBAPPS}/ROOT
extract ${TOMCAT_WEBAPPS}/sdk.war ${TOMCAT_WEBAPPS}/sdk
extract ${TOMCAT_WEBAPPS}/static.war ${TOMCAT_WEBAPPS}/static
#not supported for now
#extract ${TOMCAT_WEBAPPS}/ticket.war ${TOMCAT_WEBAPPS}/ticket
extract ${TOMCAT_WEBAPPS}/TMS.war ${TOMCAT_WEBAPPS}/TMS
extract ${TOMCAT_WEBAPPS}/webclient.war ${TOMCAT_WEBAPPS}/webclient
#remove exctracted war files
rm -f ${TOMCAT_WEBAPPS}/*.war
#removal of the original nyx webservices services folder, content will come from symlink folder on FS
rm -rf ${TOMCAT_WEBAPPS}/nyx/WEB-INF/services
cp ${OPENSHIFT_PLN_DIR}/conf/jndi.properties 			${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/jaas.config 				${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/mobile.properties 			${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/ROOT.properties 			${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/sdk.properties 			${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/tomcat.logging.properties 	${TOMCAT_CONF}/logging.properties
cp ${OPENSHIFT_PLN_DIR}/conf/mobile.logging.properties 	${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/ROOT.logging.properties 	${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/sdk.logging.properties 	${TOMCAT_CONF}/
#osgi setting 
cp ${OPENSHIFT_PLN_DIR}/conf/mobile.osgi.properties 	${TOMCAT_WEBAPPS}/mobile/WEB-INF/framework.properties
cp ${OPENSHIFT_PLN_DIR}/conf/ROOT.osgi.properties 		${TOMCAT_WEBAPPS}/ROOT/WEB-INF/framework.properties
cp ${OPENSHIFT_PLN_DIR}/conf/sdk.osgi.properties 		${TOMCAT_WEBAPPS}/sdk/WEB-INF/framework.properties
cp ${OPENSHIFT_PLN_DIR}/resources/org.apache.felix.shell-1.4.3.jar ${TOMCAT_WEBAPPS}/mobile/WEB-INF/bundles
cp ${OPENSHIFT_PLN_DIR}/resources/org.apache.felix.shell.remote-1.1.2.jar ${TOMCAT_WEBAPPS}/mobile/WEB-INF/bundles
cp ${OPENSHIFT_PLN_DIR}/resources/org.apache.felix.shell-1.4.3.jar ${TOMCAT_WEBAPPS}/ROOT/WEB-INF/bundles
cp ${OPENSHIFT_PLN_DIR}/resources/org.apache.felix.shell.remote-1.1.2.jar ${TOMCAT_WEBAPPS}/ROOT/WEB-INF/bundles
cp ${OPENSHIFT_PLN_DIR}/resources/org.apache.felix.shell-1.4.3.jar ${TOMCAT_WEBAPPS}/sdk/WEB-INF/bundles
cp ${OPENSHIFT_PLN_DIR}/resources/org.apache.felix.shell.remote-1.1.2.jar ${TOMCAT_WEBAPPS}/sdk/WEB-INF/bundles
cp $OPENSHIFT_PLN_DIR/conf/axis2.xml ${TOMCAT_WEBAPPS}/nyx/WEB-INF/conf/
#webdav users
cp ${OPENSHIFT_PLN_DIR}/conf/tomcat-users.xml 			${TOMCAT_CONF}/
cp -avr ${OPENSHIFT_PLN_DIR}/conf/Catalina				${TOMCAT_CONF}/
cp ${OPENSHIFT_PLN_DIR}/conf/server.xml		 			${TOMCAT_CONF}/
chmod +x ${TOMCAT}/bin/startup.sh
chmod +x ${TOMCAT}/bin/catalina.sh
chmod +x ${TOMCAT}/bin/shutdown.sh
showstatus "0" "Tomcat download, unzipped and configured!"

#Get credentials for share.
getcockpit ${PLANON_COCKPIT_URL}FileServerResource/usr/${OPENSHIFT_APP_DNS} 	\
	${OPENSHIFT_PLN_DIR}/conf/keys/share.mnt
getcockpit ${PLANON_COCKPIT_URL}FileServerResource/rsa/${OPENSHIFT_APP_DNS}	\
	${OPENSHIFT_PLN_DIR}/conf/keys/share.priv
chmod 400 ${OPENSHIFT_PLN_DIR}/conf/keys/share.priv


#Get credentials for PCIS USER 
getcockpit ${PLANON_COCKPIT_URL}PcisLoginResource/Functional/${OPENSHIFT_APP_DNS} 	\
	${OPENSHIFT_PLN_DIR}/conf/keys/Functional.credentials

getcockpit ${PLANON_COCKPIT_URL}PcisLoginResource/Purchaser/${OPENSHIFT_APP_DNS} 	\
	${OPENSHIFT_PLN_DIR}/conf/keys/Purchaser.credentials

#Get credentials for Cockpit acces.
getcockpit ${PLANON_COCKPIT_URL}PcisLoginResource/Cockpit/${OPENSHIFT_APP_DNS} 	    \
	${OPENSHIFT_PLN_DIR}/conf/keys/Cockpit.credentials


mount 
set -x

#
# Create data mount for customer
# Unmount with: mount drop
#
# For this to work, make sure the file /etc/fuse.conf
# contains:
#		user_allow_other
#
share 'create'

# create symbolic link for webdav
ln -s ${OPENSHIFT_PLN_DIR}/mount/live/webdav/ ${OPENSHIFT_PLN_DIR}/data/webdav
ln -s ${OPENSHIFT_PLN_DIR}/data/webdav/ ${TOMCAT_WEBAPPS}
showstatus "0" "Webdav configured!"

# create symbolic link for secure documents
ln -s ${OPENSHIFT_PLN_DIR}/mount/live/securedocs/ ${OPENSHIFT_PLN_DIR}/data/securedocs
showstatus "0" "Securedocs configured!"

#Create Symlink for nyx/webservices to webdav folder 
mkdir -p ${OPENSHIFT_PLN_DIR}/data/webdav/Static/webservices
mkdir -p ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content
ln -s ${OPENSHIFT_PLN_DIR}/data/webdav/Static/webservices ${TOMCAT_WEBAPPS}/nyx/WEB-INF/services
showstatus "0" "Webservices symlink configured!"

#Copy background login image from tomcat to webdav if file not allready present and make static symlink for login-background.jpg
cp -n ${TOMCAT_WEBAPPS}/static/images/login_background.jpg ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/login_background.jpg
cp -n ${TOMCAT_WEBAPPS}/static/images/login_background.jpg ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/login_background.default.jpg

cp -n ${TOMCAT_WEBAPPS}/static/favicon.ico ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/favicon.ico
cp -n ${TOMCAT_WEBAPPS}/static/favicon.ico ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/favicon.default.ico

rm -f ${TOMCAT_WEBAPPS}/static/images/login_background.jpg
rm -f ${TOMCAT_WEBAPPS}/static/favicon.ico
rm -f ${TOMCAT_WEBAPPS}/static/images/favicon.ico

ln -s ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/login_background.jpg ${TOMCAT_WEBAPPS}/static/images/login_background.jpg 
ln -s ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/login_background.default.jpg ${TOMCAT_WEBAPPS}/static/images/login_background.default.jpg 

ln -s ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/favicon.ico ${TOMCAT_WEBAPPS}/static/favicon.ico 
ln -s ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/favicon.ico ${TOMCAT_WEBAPPS}/static/images/favicon.ico 
ln -s ${OPENSHIFT_PLN_DIR}/data/webdav/Static/content/favicon.default.ico ${TOMCAT_WEBAPPS}/static/favicon.default.ico
showstatus "0" "Login background image + favicon symlink configured!"

#Create link to catalina.out
cp -n ${TOMCAT}/logs/catalina.out ${OPENSHIFT_PLN_DIR}/logs/catalina.out
rm -f ${TOMCAT}/logs/catalina.out
ln -s ${OPENSHIFT_PLN_DIR}/logs/catalina.out ${TOMCAT}/logs/catalina.out

#Add cloud software
getartifact ${DOWNLOAD_FILE_CLOUD} 	${DOWNLOAD_FILE_CLOUD}
extract ${DOWNLOAD_FILE_CLOUD} ${OPENSHIFT_PLN_DIR}
rm ${DOWNLOAD_FILE_CLOUD} ${OPENSHIFT_PLN_DIR}
cp ${OPENSHIFT_PLN_DIR}/cloud/jboss/* ${JBOSS_BUNDLES}/planon/ 
cp -f ${OPENSHIFT_PLN_DIR}/cloud/tomcat/* ${TOMCAT_BUNDLES}/ROOT/
rm bundles ${OPENSHIFT_PLN_DIR}/cloud -rf


#webstart installation
cp ${OPENSHIFT_PLN_DIR}/conf/planon.jnlp	 	${TOMCAT_WEBAPPS}/PlanonWebstart/planon.jnlp
showstatus "0" "Webstart configured!"

#write environmentsettings to file in setup
#env >${OPENSHIFT_PLN_DIR}env/setupinstall.txt


exit 0